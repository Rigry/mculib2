v2.052 tim_f4 + tim_f4_t,  в классt Pin_t описаны PN и PI (pin.h)

v2.052 tim_f0_t

v2.051 flash избавился от лишней структуры-подписчика внутри

v2.050 начал tim_periph

v2.049 рефакторинг flash

v2.048 теститрование flash

v2.047 добавлен пустой пин

v2.046 теститрование flash в процессе

v2.045 рефакторинг flash_periph + тесты для F0,F4

v2.044 рефакторинг ADC + тесты для F0

v2.043 рефакторинг ADC под тестируемость + тесты для F4

v2.042 прерывания починил, не работает АЦП с несколькими каналами. Возможная причина в несвоевременности прерывания

v2.041 не работают прерывания (подписывается, но потом затирается), коммит перед изменениями

v2.040 переписал таймер на подписчика и рефакторинг SysTick для тестируемости

v2.039 добавил лист и подписчика

v2.038 фиксация для начала EO94_IC_ABB_ACS

v2.037 работа над ЭО95 плата контроля и управления
       сменил стандарт на 17 -> убрал лишние ворнинги
       в мете поиск класса может вернуть ошибку (-1)
       сброс флагов прерываний перенёс в класс самих прерываний
       класс колцевого буфера, который хранит сумму элементов
       класс АЦП перевёл на возможность работать с несколькими пинами
       новый класс АЦП с двойной фильтрацией (первая DMA, вторая колцевой буфер)
       ввёл новые дефайны на серию

v2.036 обобщил adc под f4 серию, пока без отладки

v2.035 для контроллера ЭО-91 С24

v2.034 отладил мобдас для f4 на базе AP14E4 - цифрового генератора
       проверил работу подписки на прерывания

v2.033 избавился от system файлов
       отладка модбаса для f0 на базе AP14E5 - ген с измерениями
       исправление flash и отладка для f0

v2.032 проверил SPI на EO85_zevs

v2.031 оформил SPI

v2.030 исправил базовый адрес регистров FLASH

v2.029 оформил FLASH, RCC
       добавил прерывания для f0
       изменил функции включения тактирования
       ring_buffer

v2.028 работа с подписками на прерывания (не проверялось)

v2.027 отладка кнопок (без volatile у флагов нажатия не работало)
       явно указал значения полей таймера (был мусор)

v2.026 применил паттерн observer для системных вызовов (кнопки, пищалки и т.п.)

v2.025 отладка для EO90_91_C1_C24
       добавил методы в Timer

v2.024 отладка для EO90_zevs
       добавил const_chain
       seven_segment_indicator проверен
       несколько методов для Timer
       zoomer=>buzzer

v2.023 adc for f4 in work

v2.022 обобщил encoder

v2.021 перенёс битбендинг в registr.h, переропределил через него работу с битами

v2.020 рефакторинг GPIO

v2.019 закончил pwm и ADC для f0

v2.018 отладка цифрового генератора (pwm, encoder)

v2.017 port.h перенесен в GPIO.h

v2.016 оформление ADC для f0

v2.015 рефакторинг Timer

v2.014 MODERbits и OTYPERbits

v2.013 flash переделал через наследование

v2.012 remove_reference => decay 
       make для f1

v2.011 добавлен STM32F1_files

v2.010 закончил modbusSlave (без отладки)
       скопировал NTCtable со старой библиотеки
       мелкие изменения по ходу отладки гена с измерениями

v2.009 начал modbusSlave

v2.008 закончил USART для f0

v2.007 USART для f0

v2.006 переделал DMA

v2.005 USART_src для f4
       начал переработку на новый лад DMA

v2.004 закончил биты usart для f0
       переделал биты на новый лад для TIM, ADC
       начал USART_src

v2.003 рефакторинг usart и начал usart для f0

v2.002 починил шим и расчёт частоты

v2.001 начал новый отсчёт версий,
       закончил с семисегментным индикатором

v0.322 небольшой рефакторинг в названиях,
       работа с семисегментным индикатором,
       работа с вариадик пинами

v0.321 make запускает компиляцию обоих тестов

v0.320 починил тесты для обоих серий

v0.319 добавлены inputCouter(частотомер) и encoder, добавлены методы для TIM

v0.318 фиксация для ЭО86 v1.00

v0.317 в ЭО86 отладил АЦП для f0

v0.316 spi доработал для отправки 16 бит за раз,
       добавил методы в zoomer и buttons

v0.315 в ЭО86 отладил buttons, spi, flash + закрыл почти весь TODO

v0.314 в ЭО86 отладил zoomer + немного закрыл TODO

v0.313 рефакторинг buttons и Zoomer, начал ADC

v0.312 написал buttons, компелируется, не отлажено

v0.311 рефакторинг Zoomer, переписал TIM_ral для STM32F0,
       компилируется, не отлажено

v0.310 написал класс Zoomer, компилируется, не отлажено

v0.309 написал spi_hal, компилируется, не отлажено

v0.308 переписал DMA_ral, добавив stm32f0

v0.307 немного изменил USART_ral (по аналогии со SPI_ral)

v0.306 написал минимальный SPI_ral

v0.305 переписал работу с портами, добавив stm32f0

v0.304 избавился от ворнингов в RCC
       переписал во flash констэкспр переменные внутрь класса
       дополнил FLASH для STM32F0, компелируюется, пока не отлажено

v0.303 начал flash для stm32f0

v0.302 переделал Makefile под тест на разных дискавери

v0.301 RCC_ral.h расширил до серии F0

v0.300 репозитарий как билиотека usrlib1

v0.231 переместил задание значений энергонезависимых данных в конструктор
       исправил ошибку в PWM_hal (оптимизатор включал тактирование после
       инициализации)

v0.230 HD44780 в процессе

v0.229 отлажена отправка по уарт с дма

v0.228 отладка uart с дма в процессе

v0.227 битбэндинг и отладка уарт в процессе

v0.226 отладка uart в процессе

v0.225 uart в процессе

v0.224 static_assert в hal

v0.223 начал adc_hal.h, в работе уарт модбас дма ацп

v0.222 начал modbusSlave.h

v0.221 USART_ral USART_hal DMA_ral в процессе

v0.220 имитация еепром закончил, flash_hal.h

v0.21  имитация еепром в процессе

v0.20  закончил pwm_hal

v0.19  pwm_hal в процессе

v0.18  продолжил TIM_ral и pwm_hal
       красный светодиод работает от шим

v0.17  избавился от файлов старой разработки
       начал создание FLASH_t
       начал создание TIM_t и pwm_hal

v0.16  неоптимизированная запись в список пинов

v0.15  исправил ошибку в Timers::update
       рефакторинг портов для списка пинов
       добавление полей для списка пинов
       начал разбираться со списком пинов

v0.14  ещё раз переделал программный таймер
       без оверхеда в виде массива указателей

v0.13  переработал программный таймер под стиль с++

v0.12  начал создание двух уровней абстракции
       hal - hardware abstract level
           : классы с методами,
             не привязанными к конкретному контроллеру
             сделал pin_hal
       ral - register abstract level
           : обёртка из структур над регистрами
             с функциями по работе с ними со строгой типизацией
             этот уровень необходим для hal
             сделал GPIO_ral, RCC_ral

v0.11  компиляция -02 1540 байт

v0.08  перенес объвление перечислений llul функций
       в bf файл, так как они используються в 
       методах классов пинов;
       битовые поля определил с перечислениями;
       сделал переменные таймеров статическими
       чтобы к ним отсутсвовал доступ вне функций;
       добавил функцию таймера для прерывания;
       начал работу с аппаратным таймером для ШИМ;
       переименовал проект;